package com.ciobera.fwms.order.model.am;

import com.ciobera.fwms.order.model.am.common.OrderManagementAM;
import com.ciobera.fwms.order.model.vo.readonly.FWMSDHoldingAllAssetDVOImpl;
import com.ciobera.fwms.order.model.vo.readonly.FWMSDHoldingAllAssetVOImpl;
import com.ciobera.fwms.order.model.vo.readonly.FWMSDHoldingAllCountryDVOImpl;
import com.ciobera.fwms.order.model.vo.readonly.FWMSDHoldingAllCountryVOImpl;
import com.ciobera.fwms.order.model.vo.readonly.FWMSDHoldingAllExchangeDVOImpl;
import com.ciobera.fwms.order.model.vo.readonly.FWMSDHoldingAllExchangeVOImpl;
import com.ciobera.fwms.order.model.vo.readonly.FWMSDHoldingAllVOImpl;

import java.util.Date;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 02 13:48:19 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrderManagementAMImpl extends ApplicationModuleImpl implements OrderManagementAM {
    /**
     * This is the default constructor (do not remove).
     */
    public OrderManagementAMImpl() {
    }
    
    /**
     * This method is called to populate the Order Management data for the input date using the stored procedure .
     * @param userId
     * @param asOfDate
     */
    public void processAsOfDateRecord(String userId, Date asOfDate) {
        //TODO call Stored Procedure to fill the data in the table forthe selected user and asof date 
    }


    public void getFWMSHoldingRecordsForUserId(String userId){
        if(userId != null){
            FWMSDHoldingAllVOImpl holdingAllVOImpl = getFWMSDHoldingAll();
            if(holdingAllVOImpl != null){
                holdingAllVOImpl.setNamedWhereClauseParam("loggedInUserId", userId);
                holdingAllVOImpl.executeQuery();
            }
            
            FWMSDHoldingAllAssetVOImpl holdingAllAssetVOImpl = getFWMSDHoldingAllAsset();
            if(holdingAllAssetVOImpl != null){
                holdingAllAssetVOImpl.setNamedWhereClauseParam("loggedInUserId", userId);
                holdingAllAssetVOImpl.executeQuery();
            }
            
            FWMSDHoldingAllCountryVOImpl holdingAllCountryVOImpl = getFWMSDHoldingAllCountry();
            if(holdingAllCountryVOImpl != null){
                holdingAllCountryVOImpl.setNamedWhereClauseParam("loggedInUserId", userId);
                holdingAllCountryVOImpl.executeQuery();
            }
            
            FWMSDHoldingAllExchangeVOImpl holdingAllExchangeVOImpl = getFWMSDHoldingAllExchange();
            if(holdingAllExchangeVOImpl != null){
                holdingAllExchangeVOImpl.setNamedWhereClauseParam("loggedInUserId", userId);
                holdingAllExchangeVOImpl.executeQuery();
            }
        }
    }


    /**
     * Container's getter for FWMSDHoldingAllVO1.
     * @return FWMSDHoldingAllVO1
     */
    public FWMSDHoldingAllVOImpl getFWMSDHoldingAll() {
        return (FWMSDHoldingAllVOImpl) findViewObject("FWMSDHoldingAll");
    }

    /**
     * Container's getter for FWMSDHoldingAllAssetVO1.
     * @return FWMSDHoldingAllAssetVO1
     */
    public FWMSDHoldingAllAssetVOImpl getFWMSDHoldingAllAsset() {
        return (FWMSDHoldingAllAssetVOImpl) findViewObject("FWMSDHoldingAllAsset");
    }

    /**
     * Container's getter for FWMSDHoldingAllAssetDVO1.
     * @return FWMSDHoldingAllAssetDVO1
     */
    public FWMSDHoldingAllAssetDVOImpl getFWMSDHoldingAllAssetD() {
        return (FWMSDHoldingAllAssetDVOImpl) findViewObject("FWMSDHoldingAllAssetD");
    }

    /**
     * Container's getter for FWMSDHoldingAllAssetVOToFWMSDHoldingAllAssetDVO1.
     * @return FWMSDHoldingAllAssetVOToFWMSDHoldingAllAssetDVO1
     */
    public ViewLinkImpl getFWMSDHoldingAllAssetVOToFWMSDHoldingAllAssetDVO() {
        return (ViewLinkImpl) findViewLink("FWMSDHoldingAllAssetVOToFWMSDHoldingAllAssetDVO");
    }

    /**
     * Container's getter for FWMSDHoldingAllCountryVO1.
     * @return FWMSDHoldingAllCountryVO1
     */
    public FWMSDHoldingAllCountryVOImpl getFWMSDHoldingAllCountry() {
        return (FWMSDHoldingAllCountryVOImpl) findViewObject("FWMSDHoldingAllCountry");
    }

    /**
     * Container's getter for FWMSDHoldingAllCountryDVO1.
     * @return FWMSDHoldingAllCountryDVO1
     */
    public FWMSDHoldingAllCountryDVOImpl getFWMSDHoldingAllCountryD() {
        return (FWMSDHoldingAllCountryDVOImpl) findViewObject("FWMSDHoldingAllCountryD");
    }

    /**
     * Container's getter for FWMSHoldingAllCountryVOToFWMSHoldingAllCountryDVO1.
     * @return FWMSHoldingAllCountryVOToFWMSHoldingAllCountryDVO1
     */
    public ViewLinkImpl getFWMSHoldingAllCountryVOToFWMSHoldingAllCountryDVO() {
        return (ViewLinkImpl) findViewLink("FWMSHoldingAllCountryVOToFWMSHoldingAllCountryDVO");
    }

    /**
     * Container's getter for FWMSDHoldingAllExchangeVO1.
     * @return FWMSDHoldingAllExchangeVO1
     */
    public FWMSDHoldingAllExchangeVOImpl getFWMSDHoldingAllExchange() {
        return (FWMSDHoldingAllExchangeVOImpl) findViewObject("FWMSDHoldingAllExchange");
    }

    /**
     * Container's getter for FWMSDHoldingAllExchangeDVO1.
     * @return FWMSDHoldingAllExchangeDVO1
     */
    public FWMSDHoldingAllExchangeDVOImpl getFWMSDHoldingAllExchangeD() {
        return (FWMSDHoldingAllExchangeDVOImpl) findViewObject("FWMSDHoldingAllExchangeD");
    }

    /**
     * Container's getter for FWMSDHoldingAllExchangeVOToFWMSDHoldingAllExchangeDVO1.
     * @return FWMSDHoldingAllExchangeVOToFWMSDHoldingAllExchangeDVO1
     */
    public ViewLinkImpl getFWMSDHoldingAllExchangeVOToFWMSDHoldingAllExchangeDVO() {
        return (ViewLinkImpl) findViewLink("FWMSDHoldingAllExchangeVOToFWMSDHoldingAllExchangeDVO");
    }
}

